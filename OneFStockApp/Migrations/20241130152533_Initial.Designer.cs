// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OneFStockApp.Entities;

#nullable disable

namespace OneFStockApp.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20241130152533_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.BuyOrder", b =>
                {
                    b.Property<Guid>("BuyOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAndTimeOfOrder")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("StockSymbol")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("BuyOrderID");

                    b.ToTable("Buy_Orders", (string)null);

                    b.HasData(
                        new
                        {
                            BuyOrderID = new Guid("833d2fb0-532e-4aff-b0ca-95ea8a4c0f7b"),
                            DateAndTimeOfOrder = new DateTime(2024, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 48.409999999999997,
                            Quantity = 18L,
                            StockName = "Insperity, Inc.",
                            StockSymbol = "NSP"
                        },
                        new
                        {
                            BuyOrderID = new Guid("5ec384c9-49d4-423b-a9ba-bde631a3dea3"),
                            DateAndTimeOfOrder = new DateTime(2024, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 86.170000000000002,
                            Quantity = 31L,
                            StockName = "Fortress Transportation and Infrastructure Investors LLC",
                            StockSymbol = "FTAI"
                        },
                        new
                        {
                            BuyOrderID = new Guid("d534ead7-1b0c-4ac7-b7af-82782531482a"),
                            DateAndTimeOfOrder = new DateTime(2024, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 55.340000000000003,
                            Quantity = 85L,
                            StockName = "pSivida Corp.",
                            StockSymbol = "PSDV"
                        },
                        new
                        {
                            BuyOrderID = new Guid("169db619-99e1-41a4-a096-7b00f1265205"),
                            DateAndTimeOfOrder = new DateTime(2023, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 19.609999999999999,
                            Quantity = 20L,
                            StockName = "Ivy NextShares",
                            StockSymbol = "IVENC"
                        },
                        new
                        {
                            BuyOrderID = new Guid("950706d9-a6a2-425f-a937-a89aac7433e4"),
                            DateAndTimeOfOrder = new DateTime(2024, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 30.109999999999999,
                            Quantity = 92L,
                            StockName = "First Trust Indxx Global Agriculture ETF",
                            StockSymbol = "FTAG"
                        },
                        new
                        {
                            BuyOrderID = new Guid("4ca8e76d-4a96-4017-81f9-06aba4386d8f"),
                            DateAndTimeOfOrder = new DateTime(2024, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 22.0,
                            Quantity = 81L,
                            StockName = "Nuveen Insured California Select Tax-Free Income Portfolio",
                            StockSymbol = "NXC"
                        },
                        new
                        {
                            BuyOrderID = new Guid("b770b401-914b-4c0a-bf70-7adf01e5c6cc"),
                            DateAndTimeOfOrder = new DateTime(2024, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 84.810000000000002,
                            Quantity = 61L,
                            StockName = "Diplomat Pharmacy, Inc.",
                            StockSymbol = "DPLO"
                        },
                        new
                        {
                            BuyOrderID = new Guid("8d6d5b7c-b06d-4afe-bb5a-1b33d3d52757"),
                            DateAndTimeOfOrder = new DateTime(2024, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 97.930000000000007,
                            Quantity = 4L,
                            StockName = "Inotek Pharmaceuticals Corporation",
                            StockSymbol = "ITEK"
                        },
                        new
                        {
                            BuyOrderID = new Guid("269729a5-bab7-4419-a157-27f7ab29f39e"),
                            DateAndTimeOfOrder = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 45.850000000000001,
                            Quantity = 75L,
                            StockName = "Autobytel Inc.",
                            StockSymbol = "ABTL"
                        },
                        new
                        {
                            BuyOrderID = new Guid("f618366a-6f7c-4d9b-826f-e3afdbe6d8f3"),
                            DateAndTimeOfOrder = new DateTime(2024, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 86.909999999999997,
                            Quantity = 90L,
                            StockName = "Extraction Oil & Gas, Inc.",
                            StockSymbol = "XOG"
                        });
                });

            modelBuilder.Entity("OneFStockApp.Entities.SellOrder", b =>
                {
                    b.Property<Guid>("SellOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAndTimeOfOrder")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("StockSymbol")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("SellOrderID");

                    b.ToTable("Sell_Orders", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
